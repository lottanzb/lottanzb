/* Auto-generated by gen-vala-gtk-widget-bindings.xslt */

public abstract class Lottanzb.AbstractMainWindow : Object {

	public class WindowWidgets : Object {

		public Gtk.UIManager ui_manager { get; protected set; }
		public Gtk.ActionGroup action_group { get; protected set; }
		public Gtk.Action file { get; protected set; }
		public Gtk.Action edit { get; protected set; }
		public Gtk.Action view { get; protected set; }
		public Gtk.Action help { get; protected set; }
		public Gtk.Action quit { get; protected set; }
		public Gtk.ToggleAction show_toolbar { get; protected set; }
		public Gtk.ToggleAction show_infobar { get; protected set; }
		public Gtk.ToggleAction show_download_action_pane { get; protected set; }
		public Gtk.Action show_help_content { get; protected set; }
		public Gtk.Action show_about_dialog { get; protected set; }
		public Gtk.ActionGroup backend_action_group { get; protected set; }
		public Gtk.Action add { get; protected set; }
		public Gtk.Action add_url { get; protected set; }
		public Gtk.Action select_local_session { get; protected set; }
		public Gtk.Action select_remote_session { get; protected set; }
		public Gtk.Action clear { get; protected set; }
		public Gtk.Action open_web_interface { get; protected set; }
		public Gtk.Action open_download_folder { get; protected set; }
		public Gtk.ToggleAction paused { get; protected set; }
		public Gtk.Action manage_servers { get; protected set; }
		public Gtk.Action edit_preferences { get; protected set; }
		public Gtk.Window main_window { get; protected set; }
		public Gtk.VBox container { get; protected set; }
		public Gtk.MenuBar menu_bar { get; protected set; }
		public Gtk.Toolbar toolbar { get; protected set; }
		public Gtk.EventBox download_list { get; protected set; }
		public Gtk.EventBox message { get; protected set; }
		public Gtk.EventBox infobar { get; protected set; }

	}

	protected Gtk.Builder builder;
	public WindowWidgets widgets;

	construct {
		builder = new Gtk.Builder ();
		try {
			builder.add_from_resource ("/org/lottanzb/gui/" + ui_file_name);
		} catch (Error e) {
			error ("could not load UI file: %s", e.message);
			exit (-1);
		}
		widgets = new WindowWidgets ();
		SList<unowned Object> objects = builder.get_objects ();
		foreach (Object object in objects) {
			if (object is Gtk.Buildable) {
				widgets.set ((object as Gtk.Buildable).get_name (), object);
			}
		}
		builder.connect_signals (this);
	}
	
	private static const string ui_file_name = "main_window.ui";

}