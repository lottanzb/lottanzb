/* Auto-generated by gen-vala-gtk-widget-bindings.xslt */

public abstract class Lottanzb.AbstractServerEditorPane : Object {

	public class WindowWidgets : Object {

		public Gtk.Adjustment connection_adjustment { get; protected set; }
		public Gtk.Adjustment port_adjustment { get; protected set; }
		public Gtk.Window window { get; protected set; }
		public Gtk.Box server_editor_pane { get; protected set; }
		public Gtk.Box box1 { get; protected set; }
		public Gtk.Label header_label { get; protected set; }
		public Gtk.Switch enable { get; protected set; }
		public Gtk.Alignment alignment1 { get; protected set; }
		public Gtk.Table table1 { get; protected set; }
		public Gtk.Label label2 { get; protected set; }
		public Gtk.Entry host { get; protected set; }
		public Gtk.Label label4 { get; protected set; }
		public Gtk.Entry username { get; protected set; }
		public Gtk.Label label5 { get; protected set; }
		public Gtk.Entry password { get; protected set; }
		public Gtk.Label label8 { get; protected set; }
		public Gtk.Label ssl_label { get; protected set; }
		public Gtk.Box box2 { get; protected set; }
		public Gtk.Switch ssl { get; protected set; }
		public Gtk.Alignment alignment2 { get; protected set; }
		public Gtk.Label label1 { get; protected set; }
		public Gtk.Label connections_label { get; protected set; }
		public Gtk.Box box3 { get; protected set; }
		public Gtk.SpinButton port { get; protected set; }
		public Gtk.Box box4 { get; protected set; }
		public Gtk.SpinButton connections { get; protected set; }
		public Gtk.SizeGroup sizegroup1 { get; protected set; }

	}

	protected Gtk.Builder builder;
	public WindowWidgets widgets;

	construct {
		builder = new Gtk.Builder ();
		try {
			builder.add_from_resource ("/org/lottanzb/gui/" + ui_file_name);
		} catch (Error e) {
			error ("could not load UI file: %s", e.message);
			exit (-1);
		}
		widgets = new WindowWidgets ();
		SList<unowned Object> objects = builder.get_objects ();
		foreach (Object object in objects) {
			if (object is Gtk.Buildable) {
				widgets.set ((object as Gtk.Buildable).get_name (), object);
			}
		}
		builder.connect_signals (this);
	}
	
	private static const string ui_file_name = "server_editor_pane.ui";

}